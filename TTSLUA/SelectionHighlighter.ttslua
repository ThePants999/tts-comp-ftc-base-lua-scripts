-- FTC-GUID: 27de4f,84c3a4

-- This script highlights objects in green when they are selected by a player.
local selectedObjects = {}
local checkInterval = 0.1

function onLoad()
    -- Just destroy it (if it exists). If it doesn't exist, TTS won't error out.
    Timer.destroy("checkSelections")

    -- Wait 30 frames, then move ourselves below the table
    Wait.frames(function()
        self.setPosition({-5, -5, -5})
        self.setLock(true)
        self.interactable = false
    end, 30)

    -- Create the timer
    Timer.create({
        identifier    = "checkSelections",
        function_name = "checkSelections",
        delay         = checkInterval,
        repetitions   = 0
    })
end




function onDestroy()
    Timer.destroy("checkSelections")
    clearAllHighlights()
end

function checkSelections()
    local currentSelections = {}

    -- Track all currently selected objects by all players
    for _, player in ipairs(Player.getPlayers()) do
        local selected = player.getSelectedObjects() or {}
        for _, obj in ipairs(selected) do
            local guid = obj.getGUID()
            -- Ensure we're only highlighting specific object types
            if (obj.tag == "Figurine" or obj.tag == "Generic" or obj.tag == "Custom_Model") and not selectedObjects[guid] then
                -- Store the object and its original highlight color
                selectedObjects[guid] = {
                    object = obj,
                    originalColor = obj.getHighlightColor() -- nil if un-highlighted
                }
                obj.highlightOn({0, 1, 0}) -- Highlight in green
            end
            currentSelections[guid] = true
        end
    end

    -- Unhighlight objects that are no longer selected
    for guid, data in pairs(selectedObjects) do
        if not currentSelections[guid] then
            local obj = data.object
            if obj then
                if data.originalColor then
                    -- Restore original highlight color if it existed
                    obj.highlightOn(data.originalColor)
                else
                    -- Remove highlight if there was no original color
                    obj.highlightOff()
                end
            end
            selectedObjects[guid] = nil -- Remove the object from the tracking list
        end
    end
end


function clearAllHighlights()
    for guid, data in pairs(selectedObjects) do
        local obj = data.object
        if obj then
            -- If it had an original color, restore it
            if data.originalColor then
                obj.highlightOn(data.originalColor)
            else
                obj.highlightOff()
            end
        end
    end
    selectedObjects = {}
end
